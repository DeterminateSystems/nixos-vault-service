name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

jobs:
  Terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - name: Enable magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Terraform fmt
        run: nix-shell --run 'terraform fmt -check -recursive ./terraform'
      - name: Terraform init
        run: |
          nix-shell --run '
            for dir in $(find terraform -type d); do
              echo "initializing dir $dir"
              terraform -chdir=$dir init -backend=false
            done
          '
      - name: Terraform validate
        run: |
          nix-shell --run '
            for dir in $(find terraform -type d); do
              echo "validating dir $dir"
              terraform -chdir=$dir validate -no-color
            done
          '

  NixFormat:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Check nixpkgs-fmt formatting
        run: .github/workflows/fmt.sh

  Shellcheck:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - name: Enable magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      - name: Shellcheck ./scripts/
        run: nix-shell --run 'shellcheck $(git ls-files | grep "\.sh$")'

  NixTests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - name: Enable magic Nix cache
        uses: DeterminateSystems/flakehub-cache-action@main
      - name: General nix flake check
        run: nix flake check --keep-going -L

  EditorConfig:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: greut/eclint-action@v0

  RustFmt:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Check rustfmt
        working-directory: ./messenger
        run: nix develop --command cargo fmt -- --check

  RustBuild:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Build messenger
        run: nix build .#messenger -L
