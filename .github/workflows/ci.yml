name: CI
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

jobs:
  CI:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - name: Enable FlakeHub cache
        uses: DeterminateSystems/flakehub-cache-action@main

      - uses: greut/eclint-action@v0
        if: success() || failure()

      - name: Check nixpkgs-fmt formatting
        if: success() || failure()
        run: |
          find . -path '*.nix' -print0 | xargs -0 nix develop -c nixpkgs-fmt --check

      - name: Terraform fmt
        if: success() || failure()
        run: nix develop -c terraform fmt -check -recursive ./terraform
      - name: Terraform init
        run: |
          for dir in $(find terraform -type d); do
            echo "initializing dir $dir"
            nix develop -c terraform -chdir=$dir init -backend=false
          done
      - name: Terraform validate
        if: success() || failure()
        run: |
          for dir in $(find terraform -type d); do
            echo "validating dir $dir"
            nix develop -c terraform -chdir=$dir validate -no-color
          done
      - name: Shellcheck
        if: success() || failure()
        run: nix develop -c shellcheck $(git ls-files | grep "\.sh$")

      - name: Check rustfmt
        if: success() || failure()
        working-directory: ./messenger
        run: nix develop --command cargo fmt -- --check

      - name: Build messenger
        if: success() || failure()
        run: nix build .#messenger -L

      - name: General nix flake check
        if: success() || failure()
        run: nix flake check --keep-going -L
